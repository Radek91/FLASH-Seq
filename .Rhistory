# 1. Load Required elements
INPUT <- "/home/vincent.hahaut/data_storage/ORGANOIDS_W18/"
OUTPUT <- "/home/vincent.hahaut/data_storage/ORGANOIDS_W18/RESULTS/"
source("~/Desktop/FLASH-Seq/R/general/8_SingleCell_functions.R")
# 1. Load Required elements
INPUT <- "/home/vincent.hahaut/data_storage/ORGANOIDS_W18/"
OUTPUT <- "/home/vincent.hahaut/data_storage/ORGANOIDS_W18/RESULTS/"
source("~/Desktop/FLASH-Seq/R/general/6_singleCell_functions.R")
suppressWarnings(dir.create(OUTPUT))
setwd(OUTPUT)
suppressPackageStartupMessages(library(Seurat))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(cowplot))
# 2. Define colors
mycolors <- as.vector(c(yarrr::piratepal(palette = "basel"),
yarrr::piratepal(palette = "info"),
yarrr::piratepal(palette = "pony"),
yarrr::piratepal(palette = "eternal"),
yarrr::piratepal(palette = "espresso")))
celltype.colors <- function(){c(
"Photoreceptor/Bipolar Fate"="#990000",
"Rods"="#15983DFF",
"Cone Fate"="#EC579AFF",
"Müller Fate"="#FA6B09FF",
"Müller Cells"="#149BEDFF",
"Bipolar Fate"="#A1C720FF",
"Bipolar Cells (OFF)"="#FEC10BFF",
"Bipolar Cells (ON)"="#16A08CFF",
"Amacrine Cells (GABA)"="#9A703EFF",
"Horizontal Cells"= "#F5BACFFF",
"Amacrine/Horizontal Fate"="#6B8993FF",
"Glia"="#F6F0D4FF",
"Proliferating Cells"="#95CE8AFF",
"Apoptotic Cells"= "#1f72b0",
"Cones"="#94D4D4FF",
"Rod Fate" = "#dda060",
"Photoreceptor Fate" = "#F1F3E8FF")}
group.ids <- function(){
c("ORGANOIDS_W18"="w18")
}
ID.colors <- function(){c("ORGANOIDS_W18"="#0C5BB0FF")}
# 3. Mitochondria
gtf <- as.data.frame(rtracklayer::import("/home/vincent.hahaut/data_storage/REFERENCES/hsap_fastsmart/REFERENCE/GTF/gencode.v34.primary_assembly.annotation.gtf"))
mitochondrial.gene <- gtf$gene_name[gtf$seqnames == "chrM"] %>% unique()
unwanted <- gtf %>% filter(gene_type %in% c("rRNA_pseudogene", "rRNA", "Mt_rRNA") | grepl("^RPL|^RPS|MALAT1", gene_name)) %>% dplyr::select(gene_name, transcript_id) %>% pivot_longer(cols = c(gene_name, transcript_id)) %>% select(value) %>% distinct()
ssce.doublets <- read_rds(paste0(OUTPUT, "seurat.doublets.tmp.rds"))
sce <- read_rds(paste0(OUTPUT, "seurat.raw.tmp.rds"))
sample.id <- "ORGANOIDS_W18"
# 1. Remove Low quality Cells & Doublets
index <- colnames(ssce.doublets[[1]][,ssce.doublets[[1]]$Doublets == "Singlet"])
sce.filtered <- sce$ORGANOIDS_W18[,colnames(sce$ORGANOIDS_W18) %in% index]
sce.filtered
sce.filtered
# 2. Process Sample
ssce <- SCTransform(sce.filtered, vars.to.regress = "percent.mito", variable.features.n = 3000, seed.use = 42)
ssce <- RunPCA(ssce, features = VariableFeatures(object = ssce), npcs = 30)
# ElbowPlot(ssce, ndims = 30)
ssce <- FindNeighbors(ssce, dims = 1:20)
ssce <- FindClusters(ssce, resolution = 1.5)
ssce <- RunUMAP(ssce, dims = 1:20, n.neighbors = 50)
p.diagn <- plot_grid(nrow = 2,
DimPlot(ssce, group.by = "seurat_clusters", cols = mycolors) + ggtitle("Seurat Clusters - 1 res"),
FeaturePlot(ssce, features = "percent.mito") + scale_color_viridis_c(option = "viridis") +  ggtitle("Mitochondria (%)"),
FeaturePlot(ssce, features = "nUMI") + scale_color_viridis_c(option = "viridis") +  ggtitle("nUMI"),
FeaturePlot(ssce, features = "nFeature_RNA") + scale_color_viridis_c(option = "viridis") +  ggtitle("nFeatures"))
p.diagn
ssce <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS_10x.processed.rds")
metadata(ssce)
ssce@meta.data
ssce@meta.data["cell_type"]
ssce@meta.data %>% View
ssce@meta.data %>% colnames()
View(ssce@meta.data)
meta.data <- ssce@meta.data[c("orig.ident", "cell_type", "nCount_RNA", "percent.mito", "cell_type"),]
meta.data
ssce@meta.data[c("orig.ident", "cell_type", "nCount_RNA", "percent.mito", "cell_type")]
ssce <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS_10x.processed.rds")
data.table <- as.matrix(GetAssayData(ssce, slot = "data"))
scale.table <- GetAssayData(ssce , slot = "scale.data")
meta.data <- ssce@meta.data[c("orig.ident", "cell_type", "nCount_RNA", "percent.mito", "cell_type")]
ssce <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS_10x.processed.rds")
data.table <- as.matrix(GetAssayData(ssce, slot = "data"))
scale.table <- GetAssayData(ssce , slot = "scale.data")
meta.data <- ssce@meta.data[c("orig.ident", "cell_type", "nCount_RNA", "percent.mito")]
data.table
View(data.table)
View(scale.table)
write.table(data.table, "/home/vincent.hahaut/data_storage/transfer/10x_w18organoids_soupxCounts.txt", sep = "\t", col.names = T, row.names = T, quote = F)
write.table(meta.data, "/home/vincent.hahaut/data_storage/transfer/10x_w18organoids_metadata.txt", sep = "\t", col.names = T, quote = F)
write.table(data.table[,1:10], "/home/vincent.hahaut/data_storage/transfer/10x_w18organoids_soupxCounts.txt", sep = "\t", col.names = T, row.names = T, quote = F)
write.table(data.table[,1:10], "/home/vincent.hahaut/data_storage/transfer/10x_w18organoids_soupxCounts.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(data.table, "/home/vincent.hahaut/data_storage/transfer/10x_w18organoids_soupxCounts.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(meta.data, "/home/vincent.hahaut/data_storage/transfer/10x_w18organoids_metadata.txt", sep = "\t", col.names = T, quote = F)
ssce.FS.umi <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.umi.ssce.rds")
ssce.FS.internal <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.internal.ssce.rds")
ssce.FS.all <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.all.ssce.rds")
ssce.FS.umi
ssce.FS.umi
ssce.FS.umi@meta.data
ssce.FS.umi <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.umi.ssce.rds")
ssce.FS.internal <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.internal.ssce.rds")
ssce.FS.all <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.all.ssce.rds")
dt.FS.umi <- as.matrix(GetAssayData(ssce, ssce.FS.umi = "data"))
dt.FS.internal <- as.matrix(GetAssayData(ssce.FS.internal, slot = "data"))
dt.FS.all <- as.matrix(GetAssayData(ssce.FS.all, slot = "data"))
meta.data <- dt.FS.all@meta.data[c("orig.ident", "cell_type", "nCount_RNA", "percent.mito")]
write.table(dt.FS.umi, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_umiReads.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(dt.FS.internal, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_internalReads.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(dt.FS.all, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_allReads.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(meta.data, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_metadata.txt", sep = "\t", col.names = T, quote = F)
dt.FS.umi <- as.matrix(GetAssayData(ssce.FS.umi = "data"))
meta.data <- ssce.FS.all@meta.data[c("orig.ident", "cell_type", "nCount_RNA", "percent.mito")]
ssce.FS.all@meta.data
ssce.FS.all@meta.data[,-c("nCount_SCT", "nFeature_SCT", "SCT_snn_res.1.5", "seurat_clusters")]
ssce.FS.all@meta.data %>%
select(-orig.ident) %>%
rownames_to_column(orig.ident)
ssce.FS.all@meta.data %>%
select(-orig.ident) %>%
rownames_to_column("orig.ident")
ssce.FS.all@meta.data %>%
select(-orig.ident) %>%
rownames_to_column("orig.ident") %>%
select(-c("nCount_SCT", "nFeature_SCT", "SCT_snn_res.1.5", "seurat_clusters"))
meta.data <- ssce.FS.all@meta.data %>%
select(-orig.ident) %>%
rownames_to_column("orig.ident") %>%
select(-c("nCount_SCT", "nFeature_SCT", "SCT_snn_res.1.5", "seurat_clusters", "nCount_RNA", "nFeature_RNA"))
ssce.FS.umi <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.umi.ssce.rds")
ssce.FS.internal <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.internal.ssce.rds")
ssce.FS.all <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.all.ssce.rds")
dt.FS.umi <- as.matrix(GetAssayData(ssce.FS.umi = "data"))
dt.FS.internal <- as.matrix(GetAssayData(ssce.FS.internal, slot = "data"))
dt.FS.all <- as.matrix(GetAssayData(ssce.FS.all, slot = "data"))
meta.data <- ssce.FS.all@meta.data %>%
select(-orig.ident) %>%
rownames_to_column("orig.ident") %>%
select(-c("nCount_SCT", "nFeature_SCT", "SCT_snn_res.1.5", "seurat_clusters", "nCount_RNA", "nFeature_RNA"))
write.table(dt.FS.umi, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_umiReads.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(dt.FS.internal, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_internalReads.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(dt.FS.all, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_allReads.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(meta.data, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_metadata.txt", sep = "\t", col.names = T, quote = F)
dt.FS.umi <- as.matrix(GetAssayData(ssce.FS.umi = "data"))
ssce.FS.umi <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.umi.ssce.rds")
dt.FS.internal <- as.matrix(GetAssayData(ssce.FS.umi, slot = "data"))
ssce.FS.umi <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.umi.ssce.rds")
ssce.FS.internal <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.internal.ssce.rds")
ssce.FS.all <- read_rds("/home/vincent.hahaut/data_storage/ORGANOIDS/ORGANOIDS.all.ssce.rds")
dt.FS.umi <- as.matrix(GetAssayData(ssce.FS.umi, slot = "data"))
dt.FS.internal <- as.matrix(GetAssayData(ssce.FS.internal, slot = "data"))
dt.FS.all <- as.matrix(GetAssayData(ssce.FS.all, slot = "data"))
meta.data <- ssce.FS.all@meta.data %>%
select(-orig.ident) %>%
rownames_to_column("orig.ident") %>%
select(-c("nCount_SCT", "nFeature_SCT", "SCT_snn_res.1.5", "seurat_clusters", "nCount_RNA", "nFeature_RNA"))
write.table(dt.FS.umi, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_umiReads.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(dt.FS.internal, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_internalReads.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(dt.FS.all, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_allReads.txt", sep = "\t", col.names = NA, row.names = T, quote = F)
write.table(meta.data, "/home/vincent.hahaut/data_storage/transfer/FS_w18organoids_metadata.txt", sep = "\t", col.names = T, quote = F)
